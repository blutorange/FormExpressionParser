/* Generated By:JavaCC: Do not edit this line. ParseException.java Version 5.0 */
/* JavaCCOptions:KEEP_LINE_COL=null */
package de.xima.fc.form.expression.exception;

import javax.annotation.Nonnull;
import javax.annotation.Nullable;

import de.xima.fc.form.expression.enums.EMethod;
import de.xima.fc.form.expression.iface.context.IEvaluationContext;
import de.xima.fc.form.expression.iface.context.IFunction;
import de.xima.fc.form.expression.object.ALangObject;

/**
 * This exception is thrown when an object support the division
 * operator, but not with a certain operand.
 * <br><br>
 * This exception should not be used for any other method other than {@link EMethod#SLASH}.
 */
public class IllegalDividendException extends IllegalArgumentValueException {

	private static final long serialVersionUID = 1L;

	public IllegalDividendException(@Nonnull final ALangObject divisor, @Nonnull final ALangObject dividend, final int index, @Nonnull final IEvaluationContext ec) {
		super(getSlashFunction(divisor, ec), EMethod.SLASH.methodName, divisor, dividend, index, ec);
		this.dividend = dividend;
		this.divisor = divisor;
	}
	@Nullable
	private static IFunction<? extends ALangObject> getSlashFunction(@Nonnull final ALangObject divisor, @Nonnull final IEvaluationContext ec) {
		IFunction<? extends ALangObject> slashFunction;
		try {
			slashFunction = divisor.expressionMethod(EMethod.SLASH, ec);
		}
		catch (final EvaluationException e) {
			slashFunction = null;
		}
		return slashFunction;
	}
	public final @Nonnull ALangObject divisor;
	public final @Nonnull ALangObject dividend;
}
