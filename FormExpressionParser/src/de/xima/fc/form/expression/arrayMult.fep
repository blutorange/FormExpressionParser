global scope {
  array<array<number>> matA;
  array<array<number>> matB;
}

function array<array<number>> getMatrix(number size, number value) {
  array<number> prototype = [];
  array<array<number>> res = [];
  
  prototype.fill(value, size);
  res.fillWith((number i) => { return prototype.copy;}, size);
  
  return res;
}

function array<array<number>> multiply(array<array<number>> m1, array<array<number>> m2, number size) {
  array<array<number>> res = [];
  res.length = size;
  for (number i in size) {
    array<number> tmp = [];
    res[i] = tmp.fill(0, size);
    for (number j in size) {
      res[i][j] = 0;
      for (number k in size) {     
        res[i][j] += m1[i][k]*m2[k][j];
      }
    }
  }
  return res;
} 

matA = [[0,1],[2,3]];
matB = [[0,1],[2,3]];

multiply(matA, matB, 2);